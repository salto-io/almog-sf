type salesforce.WebStore {
  salesforce.Picklist DefaultLanguage {
    apiName = "WebStore.DefaultLanguage"
    inlineHelpText = "The language to use when translated content isn't available. This value is configured during store creation. If you change the default language later, you must also change the default language in Experience Builder for any associated community."
    label = "Default Language"
    restricted = true
  }
  salesforce.LongTextArea Description {
    apiName = "WebStore.Description"
    label = "Description"
    length = 1000
  }
  salesforce.LongTextArea ExternalReference {
    apiName = "WebStore.ExternalReference"
    label = "External Reference ID"
    length = 32000
  }
  salesforce.Number MaxValuesPerFacet {
    apiName = "WebStore.MaxValuesPerFacet"
    inlineHelpText = "Set the maximum number of values to show per filter. Enter a value from 1 to 100."
    label = "Maximum Values per Filter"
    scale = 0
    precision = 9
    unique = false
  }
  salesforce.Text Name {
    apiName = "WebStore.Name"
    label = "Store Name"
    _required = true
    length = 255
    unique = false
    caseSensitive = false
  }
  salesforce.Picklist OrderActivationStatus {
    apiName = "WebStore.OrderActivationStatus"
    label = "Order Activation Status"
    restricted = true
    valueSetName = salesforce.StandardValueSet.instance.OrderStatus
  }
  salesforce.Picklist OrderLifeCycleType {
    apiName = "WebStore.OrderLifeCycleType"
    label = "Order Life Cycle Type"
    restricted = true
  }
  salesforce.Number PaginationSize {
    apiName = "WebStore.PaginationSize"
    inlineHelpText = "Set the maximum number of results to show per page. Enter a value from 1 to 100."
    label = "Results per Page"
    scale = 0
    precision = 9
    unique = false
  }
  salesforce.Picklist PricingStrategy {
    apiName = "WebStore.PricingStrategy"
    inlineHelpText = "Select the price to show to buyers: either the best price or the prices from the highest priority price book."
    label = "Pricing Strategy"
    restricted = true
  }
  salesforce.Picklist ProductGrouping {
    apiName = "WebStore.ProductGrouping"
    inlineHelpText = "Choose how product variations and parent products display in search results."
    label = "Default Variation Display"
    restricted = true
  }
  salesforce.Lookup SortByPricebookId {
    apiName = "WebStore.SortByPricebookId"
    inlineHelpText = "Select a price book to use when sorting search results by price."
    label = "Price Book for Sorting ID"
    relationshipName = "SortByPricebook"
  }
  salesforce.Lookup StrikethroughPricebookId {
    apiName = "WebStore.StrikethroughPricebookId"
    inlineHelpText = "Displays a price book with a product’s original list price and the buyer’s discounted price."
    label = "Price Book ID"
    relationshipName = "StrikethroughPricebook"
  }
  salesforce.LongTextArea SupportedLanguages {
    apiName = "WebStore.SupportedLanguages"
    inlineHelpText = "The languages to make available to buyers. Language options come from Translation Workbench."
    label = "Supported Languages"
    length = 2000
  }
  serviceid Id {
    apiName = "WebStore.Id"
    label = "Store ID"
    queryable = true
    _hidden_value = true
  }
  salesforce.Lookup OwnerId {
    apiName = "WebStore.OwnerId"
    label = "Owner ID"
    relationshipName = "Owner"
    _hidden_value = true
  }
  salesforce.Checkbox IsDeleted {
    apiName = "WebStore.IsDeleted"
    label = "Deleted"
    defaultValue = false
    _hidden_value = true
  }
  salesforce.DateTime CreatedDate {
    apiName = "WebStore.CreatedDate"
    label = "Created Date"
    _hidden_value = true
  }
  salesforce.Lookup CreatedById {
    apiName = "WebStore.CreatedById"
    label = "Created By ID"
    relationshipName = "CreatedBy"
    _hidden_value = true
  }
  salesforce.DateTime LastModifiedDate {
    apiName = "WebStore.LastModifiedDate"
    label = "Last Modified Date"
    _hidden_value = true
  }
  salesforce.Lookup LastModifiedById {
    apiName = "WebStore.LastModifiedById"
    label = "Last Modified By ID"
    relationshipName = "LastModifiedBy"
    _hidden_value = true
  }
  salesforce.DateTime SystemModstamp {
    apiName = "WebStore.SystemModstamp"
    label = "System Modstamp"
    _hidden_value = true
  }
  salesforce.Picklist Type {
    apiName = "WebStore.Type"
    label = "Type"
    _required = true
    restricted = true
  }
  salesforce.Checkbox OptionsGuestBrowsingEnabled {
    apiName = "WebStore.OptionsGuestBrowsingEnabled"
    label = "Guest Browsing Enabled"
  }
  salesforce.Checkbox OptionsCommerceEinsteinDeployed {
    apiName = "WebStore.OptionsCommerceEinsteinDeployed"
    label = "Commerce Einstein Deployed"
  }
  salesforce.Checkbox OptionsCommerceEinsteinActivitiesTracked {
    apiName = "WebStore.OptionsCommerceEinsteinActivitiesTracked"
    label = "Commerce Einstein Activities Tracked"
  }
  salesforce.Checkbox OptionsSkipAdditionalEntitlementCheckForSearch {
    apiName = "WebStore.OptionsSkipAdditionalEntitlementCheckForSearch"
    label = "Skip additional entitlement check for search"
  }
  salesforce.Checkbox OptionsAutoFacetingEnabled {
    apiName = "WebStore.OptionsAutoFacetingEnabled"
    label = "Autoselect the most relevant facets"
  }
  salesforce.Checkbox OptionsCartToOrderAutoCustomFieldMapping {
    apiName = "WebStore.OptionsCartToOrderAutoCustomFieldMapping"
    label = "Automatically map custom fields from cart to order"
  }
  salesforce.Checkbox OptionsGuestCartEnabled {
    apiName = "WebStore.OptionsGuestCartEnabled"
    label = "Guest Cart Enabled"
  }
  salesforce.Checkbox OptionsGuestCheckoutEnabled {
    apiName = "WebStore.OptionsGuestCheckoutEnabled"
    label = "Guest Checkout Enabled"
  }
  salesforce.Checkbox OptionsCartAsyncProcessingEnabled {
    apiName = "WebStore.OptionsCartAsyncProcessingEnabled"
    label = "Cart Async Processing Enabled"
  }
  salesforce.Checkbox OptionsDuplicateCartItemsEnabled {
    apiName = "WebStore.OptionsDuplicateCartItemsEnabled"
    label = "Duplicate Cart Items Enabled"
  }
  salesforce.Checkbox OptionsSkuDetectionEnabled {
    apiName = "WebStore.OptionsSkuDetectionEnabled"
    label = "Sku Detection Enabled"
  }
  salesforce.Checkbox OptionsCartCalculateEnabled {
    apiName = "WebStore.OptionsCartCalculateEnabled"
    label = "Cart Calculate Enabled"
  }
  salesforce.Checkbox OptionsPreserveGuestCartEnabled {
    apiName = "WebStore.OptionsPreserveGuestCartEnabled"
    label = "Preserve Guest Cart Enabled"
  }
  salesforce.Checkbox OptionsSplitShipmentEnabled {
    apiName = "WebStore.OptionsSplitShipmentEnabled"
    label = "Split Shipment Enabled"
  }
  salesforce.Number CheckoutTimeToLive {
    apiName = "WebStore.CheckoutTimeToLive"
    label = "Checkout Time To Live"
    scale = 0
    precision = 9
    unique = false
  }
  salesforce.DateTime CheckoutValidAfterDate {
    apiName = "WebStore.CheckoutValidAfterDate"
    label = "Checkout Valid After Date"
  }
  salesforce.Lookup LocationId {
    apiName = "WebStore.LocationId"
    label = "Location ID"
    relationshipName = "Location"
  }
  salesforce.Number GuestCartTimeToLive {
    apiName = "WebStore.GuestCartTimeToLive"
    label = "Guest Cart Time To Live"
    scale = 0
    precision = 9
    unique = false
    inlineHelpText = "Set the Time To Live value in minutes for guest carts. Enter a value from 1 to 10800."
  }
  salesforce.Picklist DefaultTaxLocaleType {
    apiName = "WebStore.DefaultTaxLocaleType"
    label = "Tax Type"
    restricted = true
    inlineHelpText = "Choose Net if the product price doesn’t include tax. Choose Gross if the product price includes tax. Changing the tax type will effect any existing carts. We recommend clearing these carts to avoid any discrepancies."
  }
}
